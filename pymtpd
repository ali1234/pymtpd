#!/usr/bin/env python3

import os, stat, time, subprocess

import mtp

class MTPGadget(mtp.Gadget):

    def __enter__(self):
        print('Configuring gadget')
        self.gadget.bcdUSB = '0x0200'
        self.gadget.bDeviceClass = '0x02'
        self.gadget.bDeviceSubClass = '0x02'
        self.gadget.bcdDevice = '0x3008'
        self.gadget.idVendor = self.vid
        self.gadget.idProduct = self.pid

        self.gadget.os_desc.use = '1'
        self.gadget.os_desc.b_vendor_code = '0xcd'
        self.gadget.os_desc.qw_sign = 'MSFT100'

        self.gadget.strings['0x409'].serialnumber = '9112473'
        self.gadget.strings['0x409'].manufacturer = 'ali1234'
        self.gadget.strings['0x409'].product = 'something'

        self.gadget.functions['rndis.usb0'].os_desc['interface.rndis'].compatible_id = 'RNDIS'
        self.gadget.functions['rndis.usb0'].os_desc['interface.rndis'].sub_compatible_id = '5162001'

        self.gadget.configs['c.1'].strings['0x409'].configuration = 'mtp test'

        self.add_function_to_config('rndis.usb0', 'c.1')
        self.add_function_to_config('acm.GS0', 'c.1')
        self.add_function_to_config('acm.GS1', 'c.1')
        self.add_function_to_config('acm.GS2', 'c.1')
        self.add_function_to_config('acm.GS3', 'c.1')
        self.add_function_to_config('ffs.mtp', 'c.1')

        os.makedirs('/dev/mtp', exist_ok=True)
        subprocess.call(['mount', '-c', '-t', 'functionfs', 'mtp', '/dev/mtp'])

        return self

    def __exit__(self, t, value, traceback):
        print('Tearing down gadget')
        self.gadget.UDC = ''

        subprocess.call(['umount', '/dev/mtp'])

        self.remove_function_from_config('rndis.usb0', 'c.1')
        self.remove_function_from_config('acm.GS0', 'c.1')
        self.remove_function_from_config('acm.GS1', 'c.1')
        self.remove_function_from_config('acm.GS2', 'c.1')
        self.remove_function_from_config('acm.GS3', 'c.1')
        self.remove_function_from_config('ffs.mtp', 'c.1')

        del self.gadget.configs['c.1'].strings['0x409']
        del self.gadget.configs['c.1']
        del self.gadget.functions['rndis.usb0']
        del self.gadget.functions['acm.GS0']
        del self.gadget.functions['acm.GS1']
        del self.gadget.functions['acm.GS2']
        del self.gadget.functions['acm.GS3']
        del self.gadget.functions['ffs.mtp']
        del self.gadget.strings['0x409']

        self.remove_gadget()


class OutputRedirect(object):
    def __init__(self, dev):
        self.dev = dev

    def __enter__(self):
        self.oldfds = [os.dup(n) for n in range(3)]
        fd = os.open(self.dev, os.O_RDWR)
        [os.dup2(fd, n) for n in range(3)]
        os.close(fd)
        return self

    def __exit__(self, t, value, traceback):
        [os.dup2(self.oldfds[n], n) for n in range(3)]




if __name__ == '__main__':

    with MTPGadget(name='g1', vid='0x0430', pid='0xa4a2') as g:
        with mtp.MTPFunction('/dev/mtp') as function:

            g.bind('dummy_udc.0')

            try:
                function.processEventsForever()
            except KeyboardInterrupt:
                print("Shutting down")
